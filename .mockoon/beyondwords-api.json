{
  "uuid": "41d79333-3454-4966-85e2-fa39bd3f9a3a",
  "lastMigration": 32,
  "name": "BeyondWords API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "",
  "routes": [
    {
      "uuid": "cd87bb47-7354-486a-a677-048cb58b8ec8",
      "documentation": "",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "10c807e1-d69c-4978-9130-a5656ac61aca",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "109b6b86-17ef-4bdb-87dd-805a49286cd0",
      "documentation": "Get project",
      "method": "get",
      "endpoint": "projects/:projectId",
      "responses": [
        {
          "uuid": "47159e36-1238-474e-8f05-0469121f4d7c",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "64833f07-fd55-4594-8de0-f97a22fb5e38",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            },
            {
              "target": "params",
              "modifier": "projectId",
              "value": "401",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "14f8b014-9397-4352-93c3-f6739c5c7d2c",
          "body": "{\n  \"id\": {{urlParam 'projectId'}},\n  \"name\": \"Mockoon Test Project\",\n  \"language\": \"en_US\",\n  \"auto_publish_enabled\": true,\n  \"title\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 90\n    }\n  },\n  \"body\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 95\n    }\n  },\n  \"summary\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 100\n    }\n  },\n  \"time_zone\": \"London\",\n  \"created\": \"2020-09-05T11:52:14Z\",\n  \"updated\": \"2023-03-30T12:14:37Z\",\n  \"background_track\": null,\n  \"language_data\": {\n    \"code\": \"en_US\",\n    \"name\": \"English\",\n    \"accent\": \"American\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "d2690a30-8265-4d82-a9d2-722cfe67531d",
      "documentation": "Create audio",
      "method": "post",
      "endpoint": "projects/:projectId/content",
      "responses": [
        {
          "uuid": "06c270c8-9e2e-45f1-b3e7-c4380e9bdba9",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f36c793d-d1fd-4086-890f-4c427d0b2598",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "abd2f70e-e61d-42ea-909f-1332380be26d",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "069b5fcc-309c-4dca-bb93-f5777b5e30f2",
          "body": "THIS IS NOT JSON",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid JSON in response",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Force-Response",
              "value": "invalid-json",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ecdb7657-8a38-4380-937e-54204529d2e5",
          "body": "{\n    \"id\": \"9279c9e0-e0b5-4789-9040-f44478ed3e9e\",\n    \"status\": \"processed\",\n    \"title\": \"{{body 'title' 'Title'}}\",\n    \"summary\": \"{{body 'summary' 'Summary'}}\",\n    \"body\": \"<p>Test.</p>\",\n    \"source_id\": \"{{body 'source_id' '90e4cbff-6382-4a88-adc5-1eb3ffa16c6d'}}\",\n    \"source_url\": \"{{body 'source_url' 'https://example.com'}}\",\n    \"author\": \"{{body 'author' 'Jane Smith'}}\",\n    \"image_url\": \"{{body 'image' 'https://example.com/image.jpg'}}\",\n    \"metadata\": {\n        \"categories\": [\n            \"News\", \n            \"Audio\"\n        ]\n    },\n    \"audio\": [\n        {\n            \"id\": 1,\n            \"content_type\": \"audio/x-mpegURL\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.m3u8\",\n            \"duration\": 1000\n        },\n        {\n            \"id\": 2,\n            \"content_type\": \"audio/mpeg\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.mp3\",\n            \"duration\": 1000\n        }\n    ],\n    \"video\": [\n        {\n            \"id\": 3,\n            \"content_type\": \"video/mp4\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.mp4\",\n            \"duration\": 1000\n        }\n    ],\n    \"published\": true,\n    \"publish_date\": \"2099-12-31T23:59:59Z\",\n    \"ads_enabled\": true,\n    \"updates_enabled\": true,\n    \"created\": \"2022-01-02T23:59:59Z\",\n    \"updated\": \"2022-03-04T00:00:00Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "913e6a62-d9ac-4660-b92b-cb924445f0f5",
      "documentation": "Update audio",
      "method": "put",
      "endpoint": "projects/:projectId/content/:contentId",
      "responses": [
        {
          "uuid": "dcf1eaa8-9508-40b7-982a-d5017b8655ac",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9ee9714d-debe-47c4-824e-e7b4e83368b4",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8035be8d-b28f-484b-a441-cf6eb6d8ddbc",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "52762211-f2da-4e53-a68f-74883e69e862",
          "body": "{\n    \"id\": \"{{urlParam 'contentId'}}\",\n    \"status\": \"processed\",\n    \"title\": \"{{body 'title' 'Title'}}\",\n    \"summary\": \"{{body 'summary' 'Summary'}}\",\n    \"body\": \"<p>Test.</p>\",\n    \"source_id\": \"{{body 'source_id' '90e4cbff-6382-4a88-adc5-1eb3ffa16c6d'}}\",\n    \"source_url\": \"{{body 'source_url' 'https://example.com'}}\",\n    \"author\": \"{{body 'author' 'Jane Smith'}}\",\n    \"image_url\": \"{{body 'image' 'https://example.com/image.jpg'}}\",\n    \"metadata\": {\n        \"categories\": [\n            \"News\", \n            \"Audio\"\n        ]\n    },\n    \"audio\": [\n        {\n            \"id\": 1,\n            \"content_type\": \"audio/x-mpegURL\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.m3u8\",\n            \"duration\": 1000\n        },\n        {\n            \"id\": 2,\n            \"content_type\": \"audio/mpeg\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.mp3\",\n            \"duration\": 1000\n        }\n    ],\n    \"video\": [\n        {\n            \"id\": 3,\n            \"content_type\": \"video/mp4\",\n            \"url\": \"https://example.cloudfront.net/path/to/file/compiled.mp4\",\n            \"duration\": 1000\n        }\n    ],\n    \"published\": true,\n    \"publish_date\": \"2099-12-31T23:59:59Z\",\n    \"ads_enabled\": true,\n    \"updates_enabled\": true,\n    \"created\": \"2022-01-02T23:59:59Z\",\n    \"updated\": \"2022-03-04T00:00:00Z\"\n}\n",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "0c9ab669-5197-4c4e-afca-2a68e7e85a51",
      "documentation": "Delete audio",
      "method": "delete",
      "endpoint": "projects/:projectId/content/:contentId",
      "responses": [
        {
          "uuid": "deb5a0b6-8ca4-4a48-87e3-752a4640a2a8",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a7f4dadc-f8fc-48b1-ab8d-cb6e5bb3f5ea",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "60a9454e-8e62-4d1f-ac92-b41a4cea5e87",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "bf826112-1999-46da-a858-75bd7231325a",
      "documentation": "Batch delete audio",
      "method": "post",
      "endpoint": "projects/:projectId/content/batch_delete",
      "responses": [
        {
          "uuid": "010a1291-f184-4d44-9fa4-288597c1f5bc",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9270061d-4119-49ec-9ac7-89cead778a87",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "25ec67af-63ec-48e3-8b7a-23d51727dfe5",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "No Content",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "2b685998-43b3-4fac-b0b7-bdf7218c9c28",
      "documentation": "Get player settings",
      "method": "get",
      "endpoint": "projects/:projectId/player_settings",
      "responses": [
        {
          "uuid": "a912f5e2-270c-4254-a505-23d0caa85053",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "00f0dea1-9b58-4ce1-9c36-b028f4f49e6e",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "67b759fa-5a0f-41af-81b8-58e7a12db32d",
          "body": "{\n  \"enabled\": true,\n  \"player_version\": \"1\",\n  \"player_style\": \"standard\",\n  \"player_title\": \"G B 7118 Amy, Brian\",\n  \"call_to_action\": \"Listen to this article\",\n  \"image_url\": \"\",\n  \"theme\": \"light\",\n  \"dark_theme\": {\n    \"background_color\": \"TRANSPARENT\",\n    \"icon_color\": \"#FFF\",\n    \"text_color\": \"#FFF\",\n    \"highlight_color\": \"#444\"\n  },\n  \"light_theme\": {\n    \"background_color\": \"#F5F5F5\",\n    \"icon_color\": \"#000\",\n    \"text_color\": \"#111\",\n    \"highlight_color\": \"#EEE\"\n  },\n  \"video_theme\": {\n    \"background_color\": \"#F5F5F5\",\n    \"icon_color\": \"#000\",\n    \"text_color\": \"#111\"\n  },\n  \"title_enabled\": false,\n  \"image_enabled\": true,\n  \"persistent_ad_image\": false,\n  \"widget_style\": \"standard\",\n  \"widget_position\": \"auto\",\n  \"segment_playback_enabled\": true,\n  \"skip_button_style\": \"auto\",\n  \"intros_outros\": [],\n  \"intro_url\": null,\n  \"outro_url\": null,\n  \"intro_outro_enabled\": false,\n  \"paywall_type\": \"none\",\n  \"paywall_url\": null,\n  \"download_button_enabled\": false,\n  \"share_button_enabled\": false,\n  \"voice_icon_enabled\": false,\n  \"logo_icon_enabled\": true,\n  \"analytics_enabled\": true,\n  \"analytics_uuid_enabled\": true,\n  \"analytics_url\": \"https://metrics.beyondwords.io/events\",\n  \"analytics_id\": 3814,\n  \"analytics_tag_enabled\": false,\n  \"analytics_tag\": null,\n  \"analytics_custom_url\": null,\n  \"updated\": \"2023-06-22T12:16:11Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "7ea55ef7-f7e0-47bc-996a-4d2700e85463",
      "documentation": "Update player settings",
      "method": "put",
      "endpoint": "projects/:projectId/player_settings",
      "responses": [
        {
          "uuid": "73800e83-1a8b-4191-a38f-65777ae9e585",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1919617d-2089-4ade-8263-d6b196bec4ab",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Conbtent-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "4d9a2419-dd24-4951-8cac-d76c50428dbc",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "03a49052-d373-4fbf-a69f-048712fffe9b",
          "body": "{\n  \"enabled\": \"{{body 'enabled' true}}\",\n  \"player_version\": \"{{body 'player_version' '1'}}\",\n  \"player_style\": \"{{body 'player_style' 'standard'}}\",\n  \"player_title\": \"{{body 'player_title' 'G B 7118 Amy, Brian'}}\",\n  \"call_to_action\": \"{{body 'call_to_action' 'Listen to this article'}}\",\n  \"image_url\": \"{{body 'image_url' 'image_url'}}\",\n  \"theme\": \"{{body 'theme' 'light'}}\",\n  \"dark_theme\": {\n    \"text_color\": \"{{body 'dark_theme.text_color' '#FFF'}}\",\n    \"background_color\": \"{{body 'dark_theme.background_color' 'TRANSPARENT'}}\",\n    \"icon_color\": \"{{body 'dark_theme.icon_color' '#FFF'}}\",\n    \"highlight_color\": \"{{body 'dark_theme.highlight_color' '#444'}}\",\n  },\n  \"light_theme\": {\n    \"text_color\": \"{{body 'light_theme.text_color' '#111'}}\",\n    \"background_color\": \"{{body 'light_theme.background_color' '#F5F5F5'}}\",\n    \"icon_color\": \"{{body 'light_theme.icon_color' '#000'}}\",\n    \"highlight_color\": \"{{body 'light_theme.highlight_color' '#EEE'}}\",\n  },\n  \"video_theme\": {\n    \"text_color\": \"{{body 'video_theme.text_color' '#111'}}\",\n    \"background_color\": \"{{body 'video_theme.background_color' '#F5F5F5'}}\",\n    \"icon_color\": \"{{body 'video_theme.icon_color' '#000'}}\",\n  },\n  \"title_enabled\": \"{{body 'title_enabled' false}}\",\n  \"image_enabled\": \"{{body 'image_enabled' true}}\",\n  \"persistent_ad_image\": \"{{body 'persistent_ad_image' false}}\",\n  \"widget_style\": \"{{body 'widget_style' 'standard'}}\",\n  \"widget_position\": \"{{body 'widget_position' 'auto'}}\",\n  \"segment_playback_enabled\": \"{{body 'segment_playback_enabled' true}}\",\n  \"skip_button_style\": \"{{body 'skip_button_style' 'auto'}}\",\n  \"intros_outros\":\"{{body 'intro_url' []}}\",\n  \"intro_url\": \"{{body 'intro_url' null}}\",\n  \"outro_url\": \"{{body 'outro_url' null}}\",\n  \"intro_outro_enabled\": \"{{body 'intro_outro_enabled' false}}\",\n  \"paywall_type\": \"{{body 'paywall_type' 'none'}}\",\n  \"paywall_url\": \"{{body 'paywall_url' null}}\",\n  \"download_button_enabled\": \"{{body 'download_button_enabled' false}}\",\n  \"share_button_enabled\": \"{{body 'share_button_enabled' false}}\",\n  \"voice_icon_enabled\": \"{{body 'voice_icon_enabled' false}}\",\n  \"logo_icon_enabled\": \"{{body 'logo_icon_enabled' true}}\",\n  \"analytics_enabled\": \"{{body 'analytics_enabled' true}}\",\n  \"analytics_uuid_enabled\": \"{{body 'analytics_uuid_enabled' true}}\",\n  \"analytics_url\": \"{{body 'analytics_url' 'https://metrics.beyondwords.io/events'}}\",\n  \"analytics_id\": \"{{body 'analytics_id' 3814}}\",\n  \"analytics_tag_enabled\": \"{{body 'analytics_tag_enabled' false}}\",\n  \"analytics_tag\": \"{{body 'analytics_tag' null}}\",\n  \"analytics_custom_url\": \"{{body 'analytics_custom_url' null}}\",\n  \"updated\": \"2023-06-22T12:16:11Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "e0249159-42d3-48e7-835d-4aa46214d544",
      "documentation": "Get video settings",
      "method": "get",
      "endpoint": "projects/:projectId/video_settings",
      "responses": [
        {
          "uuid": "26e526e2-fbd3-41d6-9c5f-c7cad6141375",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "30f6996c-7431-43bc-8642-38ccc9f69bf0",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "324ed49b-4a70-439e-873d-cabb66f686f8",
          "body": "{\n  \"enabled\": true,\n  \"logo_image_url\": null,\n  \"logo_image_position\": \"top-right\",\n  \"background_color\": \"white\",\n  \"text_background_color\": \"rgba(255, 255, 255, 0.88)\",\n  \"text_color\": \"black\",\n  \"text_highlight_color\": \"linear-gradient(to right, #933AFB, #FB3A41)\",\n  \"waveform_color\": \"linear-gradient(to right, #933AFB, #FB3A41)\",\n  \"content_image_enabled\": true,\n  \"image_extraction_enabled\": true,\n  \"pan_and_zoom_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "0cd387b4-2fe4-40d9-b535-511214e4bbb4",
      "documentation": "Get languages",
      "method": "get",
      "endpoint": "organization/languages",
      "responses": [
        {
          "uuid": "3da9edbf-31c8-4da2-8fa6-b35b8a2eb3d5",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "33d84d20-b2d5-4948-949e-70b388665e2a",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b4facbac-041d-4800-ad1f-3b1a8b9ea2fb",
          "body": "[\n  {\n    \"code\": \"en_US\",\n    \"name\": \"English\",\n    \"accent\": \"American\",\n    \"id\": 101,\n    \"created\": \"2022-01-25T07:40:27Z\",\n    \"default_voices\": {\n      \"title\": {\n        \"id\": 201,\n        \"name\": \"Ada (Multilingual)\",\n        \"speaking_rate\": 90\n      },\n      \"body\": {\n        \"id\": 201,\n        \"name\": \"Ada (Multilingual)\",\n        \"speaking_rate\": 95\n      },\n      \"summary\": {\n        \"id\": 201,\n        \"name\": \"Ada (Multilingual)\",\n        \"speaking_rate\": 100\n      }\n    }\n  },\n  {\n    \"code\": \"en_GB\",\n    \"name\": \"English\",\n    \"accent\": \"British\",\n    \"id\": 102,\n    \"created\": \"2022-01-25T07:40:27Z\",\n    \"default_voices\": {\n      \"title\": {\n        \"id\": 202,\n        \"name\": \"Ava (Multilingual)\",\n        \"speaking_rate\": 95\n      },\n      \"body\": {\n        \"id\": 202,\n        \"name\": \"Ava (Multilingual)\",\n        \"speaking_rate\": 100\n      },\n      \"summary\": {\n        \"id\": 202,\n        \"name\": \"Ava (Multilingual)\",\n        \"speaking_rate\": 105\n      }\n    }\n  },\n  {\n    \"code\": \"cy_GB\",\n    \"name\": \"Welsh\",\n    \"accent\": \"British\",\n    \"id\": 103,\n    \"created\": \"2022-01-25T07:40:27Z\",\n    \"default_voices\": {\n      \"title\": {\n        \"id\": 203,\n        \"name\": \"Ryan (Multilingual)\",\n        \"speaking_rate\": 100\n      },\n      \"body\": {\n        \"id\": 203,\n        \"name\": \"Ryan (Multilingual)\",\n        \"speaking_rate\": 105\n      },\n      \"summary\": {\n        \"id\": 203,\n        \"name\": \"Ryan (Multilingual)\",\n        \"speaking_rate\": 110\n      }\n    }\n  }\n]\n",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "8cb807f4-6c1b-41b2-a8ec-5c6d4bae3380",
      "documentation": "Get language voices",
      "method": "get",
      "endpoint": "organization/voices",
      "responses": [
        {
          "uuid": "44205bff-95aa-413d-9992-1ef7f04ea6fb",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ef5003de-95d7-4efd-8b95-c0df0636c415",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9c63284f-f1d5-401e-9371-4e9bb2be2b0b",
          "body": "[\n  {\n    \"id\": 201,\n    \"name\": \"Ada (Multilingual)\",\n    \"speaking_rate\": 100,\n    \"languages\": [\n      {\n        \"code\": \"en_US\",\n        \"name\": \"English\",\n        \"accent\": \"American\"\n      },\n      {\n        \"code\": \"en_GB\",\n        \"name\": \"English\",\n        \"accent\": \"British\"\n      },\n      {\n        \"code\": \"cy_GB\",\n        \"name\": \"Welsh\",\n        \"accent\": \"Welsh\"\n      },\n    ],\n    \"created\": \"2023-03-01T08:31:11Z\",\n    \"updated\": \"2023-03-01T08:31:12Z\",\n    \"language\": \"en_US\",\n    \"secondary_languages\": [\n      \"en_US\",\n      \"en_GB\",\n      \"cy_GB\",\n    ]\n  },\n  {\n    \"id\": 202,\n    \"name\": \"Ava (Multilingual)\",\n    \"speaking_rate\": 100,\n    \"languages\": [\n      {\n        \"code\": \"en_US\",\n        \"name\": \"English\",\n        \"accent\": \"American\"\n      },\n      {\n        \"code\": \"en_GB\",\n        \"name\": \"English\",\n        \"accent\": \"British\"\n      },\n      {\n        \"code\": \"cy_GB\",\n        \"name\": \"Welsh\",\n        \"accent\": \"Welsh\"\n      },\n    ],\n    \"created\": \"2023-03-01T08:31:11Z\",\n    \"updated\": \"2023-03-01T08:31:12Z\",\n    \"language\": \"en_US\",\n    \"secondary_languages\": [\n      \"en_US\",\n      \"en_GB\",\n      \"cy_GB\",\n    ]\n  },\n  {\n    \"id\": 203,\n    \"name\": \"Ryan (Multilingual)\",\n    \"speaking_rate\": 100,\n    \"languages\": [\n      {\n        \"code\": \"en_US\",\n        \"name\": \"English\",\n        \"accent\": \"American\"\n      },\n      {\n        \"code\": \"en_GB\",\n        \"name\": \"English\",\n        \"accent\": \"British\"\n      },\n      {\n        \"code\": \"cy_GB\",\n        \"name\": \"Welsh\",\n        \"accent\": \"Welsh\"\n      },\n    ],\n    \"created\": \"2023-03-01T08:31:11Z\",\n    \"updated\": \"2023-03-01T08:31:12Z\",\n    \"language\": \"en_US\",\n    \"secondary_languages\": [\n      \"en_US\",\n      \"en_GB\",\n      \"cy_GB\",\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "c13a0742-8f91-40dd-ab59-cc2beee69766",
      "documentation": "Update voice",
      "method": "put",
      "endpoint": "organization/voices/:voiceId",
      "responses": [
        {
          "uuid": "c762fe2b-ce9f-412a-9c35-d0d23019a704",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b14d8582-3593-4ee9-84f3-dd429157dcc0",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b0965773-9b4b-47a4-8474-cbec04d0e68a",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6a203263-138d-4b04-a8dd-addec47ce41e",
          "body": "{\n  \"id\": \"{{urlParam 'voiceId'}}\",\n  \"name\": \"Ada (Multilingual)\",\n  \"speaking_rate\": 100,\n  \"languages\": [\n    {\n      \"code\": \"en_US\",\n      \"name\": \"English\",\n      \"accent\": \"American\"\n    },\n    {\n      \"code\": \"en_GB\",\n      \"name\": \"English\",\n      \"accent\": \"British\"\n    },\n    {\n      \"code\": \"cy_GB\",\n      \"name\": \"Welsh\",\n      \"accent\": \"Welsh\"\n    },\n  ],\n  \"created\": \"2023-03-01T08:31:11Z\",\n  \"updated\": \"2023-03-01T08:31:12Z\",\n  \"language\": \"en_US\",\n  \"secondary_languages\": [\n    \"en_US\",\n    \"en_GB\",\n    \"cy_GB\",\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "464ebbc4-7b5a-41b0-a200-045e9edbf724",
      "documentation": "Update project",
      "method": "put",
      "endpoint": "projects/:projectId",
      "responses": [
        {
          "uuid": "b078498b-24b4-4857-9bfd-bf52271d64f7",
          "body": "{\"type\": \"application_error\", \"message\": \"Unexpected Error.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "325dbfdb-5a5c-44ff-8d03-4cdea1f12c12",
          "body": "{\"type\": \"invalid_content_type\", \"message\": \"Invalid Content-Type.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Content-Type",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "Conbtent-Type",
              "value": "^(?!application\\/json)$",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "50105bcb-3773-444a-9613-530a8a542e32",
          "body": "{\"type\": \"permission_error\", \"message\": \"Authentication token was not recognized.\", \"context\": {}}",
          "latency": 0,
          "statusCode": 401,
          "label": "Invalid Authentication",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "null",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "^(?!write_([a-zA-Z0-9_]+)).*$",
              "operator": "equals",
              "invert": false
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e5372d98-67a1-45c4-81a8-19fc8aaa4f4e",
          "body": "{\n  \"id\": {{urlParam 'projectId'}},\n  \"name\": \"Mockoon Test Project\",\n  \"language\": \"en_US\",\n  \"auto_publish_enabled\": true,\n  \"title\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 90\n    }\n  },\n  \"body\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 95\n    }\n  },\n  \"summary\": {\n    \"enabled\": true,\n    \"voice\": {\n      \"id\": 201,\n      \"name\": \"Ada (Multilingual)\",\n      \"speaking_rate\": 100\n    }\n  },\n  \"time_zone\": \"London\",\n  \"created\": \"2020-09-05T11:52:14Z\",\n  \"updated\": \"2023-03-30T12:14:37Z\",\n  \"background_track\": null,\n  \"language_data\": {\n    \"code\": \"en_US\",\n    \"name\": \"English\",\n    \"accent\": \"American\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "application/json",
              "operator": "equals",
              "invert": false
            },
            {
              "target": "header",
              "modifier": "X-Api-Key",
              "value": "write_([a-zA-Z0-9_]+)",
              "operator": "regex",
              "invert": false
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "databucketID": "",
          "bodyType": "INLINE",
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null,
      "type": "http"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json; charset=utf-8"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "folders": [],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "cd87bb47-7354-486a-a677-048cb58b8ec8"
    },
    {
      "type": "route",
      "uuid": "109b6b86-17ef-4bdb-87dd-805a49286cd0"
    },
    {
      "type": "route",
      "uuid": "464ebbc4-7b5a-41b0-a200-045e9edbf724"
    },
    {
      "type": "route",
      "uuid": "d2690a30-8265-4d82-a9d2-722cfe67531d"
    },
    {
      "type": "route",
      "uuid": "913e6a62-d9ac-4660-b92b-cb924445f0f5"
    },
    {
      "type": "route",
      "uuid": "0c9ab669-5197-4c4e-afca-2a68e7e85a51"
    },
    {
      "type": "route",
      "uuid": "bf826112-1999-46da-a858-75bd7231325a"
    },
    {
      "type": "route",
      "uuid": "2b685998-43b3-4fac-b0b7-bdf7218c9c28"
    },
    {
      "type": "route",
      "uuid": "7ea55ef7-f7e0-47bc-996a-4d2700e85463"
    },
    {
      "type": "route",
      "uuid": "e0249159-42d3-48e7-835d-4aa46214d544"
    },
    {
      "type": "route",
      "uuid": "0cd387b4-2fe4-40d9-b535-511214e4bbb4"
    },
    {
      "type": "route",
      "uuid": "8cb807f4-6c1b-41b2-a8ec-5c6d4bae3380"
    },
    {
      "type": "route",
      "uuid": "c13a0742-8f91-40dd-ab59-cc2beee69766"
    }
  ],
  "callbacks": []
}